import pandas as pd
import re
import csv

# Load the data
#file_path = r"C:\Users\US97684\Downloads\documents_20250317_New\Outbound\ZDM_PREMDETAILS.XLSX"
#file_path2 = r"C:\Users\US97684\Downloads\documents_20250317_New\Outbound\TE422.XLSX"
file_path1 = r"C:\Users\US97684\Downloads\documents_20250317_New\Premise_clean_final.xlsx"
df = pd.read_excel(file_path1, sheet_name='Sheet1', engine='openpyxl')
df_Premise = pd.read_excel(file_path1, sheet_name='Clean_Data', engine='openpyxl')
 
# Load configuration file for suffix lookup
config_path = r"C:\Users\US97684\Downloads\documents_20250317_New\Configuration.xlsx"
sheet1 = pd.read_excel(config_path, sheet_name='Street Abbreviation', engine='openpyxl')

# Initialize df_new as an empty DataFrame
df_new = pd.DataFrame()
direction_map = { 
    'N': 'N',
    'S': 'S',
    'E': 'E',
    'W': 'W',
    'NE': 'NE',
    'SE': 'SE',
    'SW': 'SW',
    'NW': 'NW',  
    'NORTH': 'N',
    'SOUTH': 'S',
    'EAST': 'E',
    'WEST': 'W',
    'NORTHEAST': 'NE',
    'SOUTHEAST': 'SE',
    'SOUTHWEST': 'SW',
    'NORTHWEST': 'NW'  
}

# Column 1: Column B (index 1)
df_new['FULLNAME'] =  ""
df_new['PREDIRECTION'] = df_Premise.iloc[:,4]
df_new['PROPERNAME'] = df_Premise.iloc[:,5]
df_new['ABBREVIATION'] = df_Premise.iloc[:,6]
df_new['POSTDIRECTION'] = df_Premise.iloc[:,7]

df_new['PREDIRECTION'] = df_new['PREDIRECTION'].map(direction_map).fillna(df_new['PREDIRECTION'])
df_new['POSTDIRECTION'] = df_new['POSTDIRECTION'].map(direction_map).fillna(df_new['POSTDIRECTION'])

# Create a dictionary for the abbreviation lookup (Exact match from column 0 to column 1)
abbreviation_lookup = dict(zip(sheet1.iloc[:, 0], sheet1.iloc[:, 1]))

# Apply the abbreviation lookup to the 'ABBREVIATION' column in df_new
df_new['ABBREVIATION'] = df_new['ABBREVIATION'].map(abbreviation_lookup).fillna(df_new['ABBREVIATION'])


df_new['FULLNAME'] = (df_new['PREDIRECTION'].fillna(" ") + " " + 
                           df_new['PROPERNAME'].fillna(" ") + " " + 
                           df_new['ABBREVIATION'].fillna(" ") + " " + 
                           df_new['POSTDIRECTION'].fillna(" ")).str.strip()



# Remove rows with missing required fields
required_columns = [
    'FULLNAME', 'PROPERNAME'
]
df_new = df_new.dropna(subset=required_columns)

# Remove duplicates based on LOCATIONID to simulate primary key behavior
df_new = df_new.drop_duplicates(subset='FULLNAME')


# Add a trailer row with default values
trailer_row = pd.DataFrame([['TRAILER'] + [''] * (len(df_new.columns) - 1)], 
                           columns=df_new.columns)

# Append the trailer row to the DataFrame
df_new = pd.concat([df_new, trailer_row], ignore_index=True)

# Save to CSV with escape character set
output_path = r"C:\Users\US97684\Downloads\documents_20250317\Outbound\GT_STAGE_STREETSNew.csv"

def custom_quote(val, column):
    # Check if the column is in the list of numeric columns
    return f'"{val}"' if val not in ["", None] else val

df_new = df_new.apply(lambda col: col.apply(lambda val: custom_quote(val, col.name)))

# Save to CSV with custom quoting and escape character
df_new.to_csv(output_path, index=False, quoting=csv.QUOTE_NONE, escapechar='\\')

print(f"File successfully saved to: {output_path}")